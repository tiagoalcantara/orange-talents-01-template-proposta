# Datasource
spring.datasource.platform=postgresql
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/nosso-cartao}
spring.datasource.username=keycloak
spring.datasource.password=password

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.javax.persistence.query.timeout = 50

# Feign
solicitacaoAnalise.url=${SOLICITACAO_ANALISE_URL:http://localhost:9999}
feign.client.config.solicitacaoAnalise.read-timeout=3000
feign.client.config.solicitacaoAnalise.connect-timeout=3000

cartao.url=${API_CARTAO_URL:http://localhost:8888}
feign.client.config.cartao.read-timeout=3000
feign.client.config.cartao.connect-timeout=3000

# Schedules
cartao-associar-propostas.delay = 20000

# Actuator
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true

# Métricas
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# Resource Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# Jaeger
# Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:proposta}
# Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

# Logs
logging.file.path=./logs

# Crypto
crypto.secret=esquilobombado
